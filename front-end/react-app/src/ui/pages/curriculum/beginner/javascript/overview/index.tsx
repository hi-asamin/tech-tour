import React from 'react';

export const Overview = () => {
  return (
    <>
      <h1>JavaScriptの講義内容メモ</h1>
        <h2>jsの概要</h2>
        <h2>jsの実行環境（デベロッパーツールについて）</h2>
        <h2>jsの基礎（変数定義や構文）</h2>
        <h2>jsの関数（関数定義、戻り値、無名関数と即時関数、アロー関数）</h2>
        <h2>jsのオブジェクト（他の言語との違い）</h2>
        <h2>htmlの要素を取得して操作する方法について（DOMについて、document.系、IDやClass名、セレクタから要素取得方法）</h2>
        <h2>画面の表示を変える</h2>
          <h3>index.html, index.css, index.jsを用意して、全てを読み込む</h3>
          <h3>jsが実行される仕組み（順序を説明）</h3>
          <h3>イベントについて</h3>
          <h3>イベント発火</h3>
            <h4>イベント発火させる要素を取得</h4>
            <h4>要素が取得できているか確認</h4>
            <h4>ページの読み込み後にjsが実行されるように定義（defer?）</h4>
            <h4>マウスカーソルが要素の上に乗ったタイミングで発火させる</h4>
            <h4>マウスカーソルが要素のから外れた時にイベント発火させる</h4>
            <h4>クリックすることでイベント発火させる</h4>
          <h3>スタイルの操作</h3>
            <h4>マウスカーソルが指定の要素上に存在している時に色が変化させる</h4>
            <h4>マウスカーソルが指定の要素上から離れた時に色が元に戻る様にする</h4>
          <h3>プルダウンメニューを表示させる</h3>
            <h4>プルダウンメニューのHTMLを実装する</h4>
            <h4>プルダウンメニューが画面上から見えないように実装する</h4>
            <h4>プルダウンメニューのHTML要素を取得する</h4>
            <h4>クリックでdisplay: none;からdisplay: block;に変更する</h4>
            <h4>thisについて（関数の中でthisを使うと、イベント発火元となった要素を取得することができます。thisは、使用する場面によって取得できるものが異なりますが、この段階では「イベント発火元となった要素を取得することができる」と捉えていただいて構いません。）</h4>
            <h4>クリックでdisplay: none;からdisplay: block;を反転させる</h4>
          <h3>選択した要素を表示する</h3>
            <h4>プルダウンメニューのリストの要素を全て取得する</h4>
            <h4>リストがクリックされたら、選択された要素をコンソールログする</h4>
          <h3>innerHTMLについて</h3>
            <h4>クリックした要素の文字列を取得する</h4>
            <h4>文字列を表示する領域をHTMLに実装する</h4>
            <h4>文字列を表示する要素を取得する</h4>
            <h4>文字列を表示する要素にクリックした要素の文字列を表示する</h4>
        <h2>jsの周辺知識</h2>
          <h3>jquery</h3>
          <h3>node.js</h3>
          <h3>typescript</h3>
          <h3>コンポーネント指向(Alt.js)</h3>
            <h4>仮想DOM</h4>
            <h4>React.js</h4>
            <h4>Vue.js</h4>
            <h4>Anguler</h4>
    </>
  )
};